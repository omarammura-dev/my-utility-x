image: golang:1.21-alpine  # Use Golang 1.21 with Alpine base

stages:
  - build
  - deploy  # Assuming you have a separate deployment script

cache:
  paths:
    - go/pkg/mod  # Cache Golang dependencies

build:
  stage: build
  script:
    - go mod download  # Download dependencies
    - go build .  # Build the application

deploy:  # Update this stage with your deployment script
  stage: deploy
  script:
    - go mod download  # Download dependencies
    - go build .
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s) && echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - eval $(ssh-agent -s) && echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - scp -o StrictHostKeyChecking=no -r myutilityx.com $USER@$IP_ADDRESS:/tmp/
    - ssh $USER@$IP_ADDRESS "bash /home/ubuntu/deployments/deploy.sh"


  artifacts:
    paths:
      - myutilityx.com
  only:
    - master 
