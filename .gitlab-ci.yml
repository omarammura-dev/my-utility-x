image: golang:1.21-alpine  

stages:
  - build
  - build-docker
  - deploy  

cache:
  paths:
    - go/pkg/mod  

build:
  stage: build
  before_script:
    - apk add --no-cache --upgrade bash
    - apk add --no-cache git
    - apk add --no-cache openssh-client
  script:
    - go mod download  
    - go build .  

build image:
  stage: build-docker
  image: docker
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build --build-arg MONGO_URL=$MONGO_URL --build-arg MONGO_DB_NAME=$MONGO_DB_NAME --build-arg API_URL=$API_URL --build-arg UI_URL=$UI_URL -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
  only:
    - master  

# deploy:  
#   stage: deploy
#   script:
#     - go mod download  
#     - go build .
#     - 'which ssh-agent || ( apk update && apk add openssh-client )'
#     - eval $(ssh-agent -s) && echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
#     - eval $(ssh-agent -s) && echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#     - scp -o StrictHostKeyChecking=no -r myutilityx.com $USER@$IP_ADDRESS:/tmp/
#     - ssh $USER@$IP_ADDRESS "bash /home/ubuntu/deployments/deploy-backend.sh"
deploy:
  stage: deploy
  script:
    - 'which ssh-agent || ( apk update && apk add openssh-client )'
    - eval $(ssh-agent -s) && echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh $USER@$IP_ADDRESS "mkdir -p /app/backend"
    - ssh $USER@$IP_ADDRESS "echo \"MONGO_URL=$MONGO_URL\" > /app/backend/.env"
    - ssh $USER@$IP_ADDRESS "echo \"MONGO_DB_NAME=$MONGO_DB_NAME\" >> /app/backend/.env"
    - ssh $USER@$IP_ADDRESS "echo \"API_URL=$API_URL\" >> /app/backend/.env"
    - ssh $USER@$IP_ADDRESS "echo \"UI_URL=$UI_URL\" >> /app/backend/.env"
    - ssh $USER@$IP_ADDRESS "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - ssh $USER@$IP_ADDRESS "docker pull $CI_REGISTRY_IMAGE"
    - ssh $USER@$IP_ADDRESS "docker stop mux-backend || true && docker rm mux-backend || true"
    - ssh $USER@$IP_ADDRESS "docker run -d --name mux-backend -p 8080:8080 -e MONGO_URL=$MONGO_URL -e MONGO_DB_NAME=$MONGO_DB_NAME -e API_URL=$API_URL -e UI_URL=$UI_URL $CI_REGISTRY_IMAGE"
  artifacts:
    paths:
      - myutilityx.com  
  only:
    - master 